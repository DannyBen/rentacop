# RentaCop Configuration for RuboCop

AllCops:
  NewCops: enable
  TargetRubyVersion: 3.2
  Exclude:
    - 'spec/approvals/**/*'


# === Layout ===

# Prefer outdented `private` and `protected`
Layout/AccessModifierIndentation:
  EnforcedStyle: outdent

# Align multi-line arguments normally
Layout/ArgumentAlignment:
  EnforcedStyle: with_fixed_indentation

# Align `when` with `end` in `case`
Layout/CaseIndentation:
  EnforcedStyle: end

# Indent `end` to the line that started it
Layout/EndAlignment:
  EnforcedStyleAlignWith: start_of_line

# Align hash keys and values as a table
Layout/HashAlignment:
  EnforcedHashRocketStyle: table
  EnforcedColonStyle: table

# Disable hanging indents everywhere (strings concatenated with backslash)
Layout/LineEndStringConcatenationIndentation:
  EnforcedStyle: indented

# Disable hanging indents everywhere (chained methods)
Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

# Disable hanging indents everywhere (multi-line operations)
Layout/MultilineOperationIndentation:
  EnforcedStyle: indented


# === Lint ===

# Allow `it` instead of `it()` inside a block
Lint/ItWithoutArgumentsInBlock:
  Enabled: false

# Not all inheriting classes need to call `super` in their constructor
Lint/MissingSuper: 
  Enabled: false

# `FileUtils` methods do not behave properly on Vagrant
Lint/NonAtomicFileOperation:
  Enabled: false




# === Metrics ===

# Allow some complexity
Metrics/AbcSize:
  Max: 30

# Blocks in some places are long by design
Metrics/BlockLength:
  Exclude:
    - 'spec/**/*_spec.rb'
    - '*.gemspec'

# Allow some longer classes
Metrics/ClassLength:
  Max: 200

# Allow some complexity
Metrics/CyclomaticComplexity:
  Max: 10

# Allow somewhat longer methods
# Consider multi-line arrays/hashes as one line
Metrics/MethodLength:
  Max: 25
  CountAsOne:
    - array
    - hash
    - heredoc

# Allow some complexity
Metrics/PerceivedComplexity:
  Max: 10


# === Naming ===

# Allow any method parameter name
Naming/MethodParameterName:
  Enabled: false

# Allow `has_`, `is_` prefixes
Naming/PredicatePrefix:
  Enabled: false

# Allow boolean methods to not end with ?
Naming/PredicateMethod:
  Enabled: false


# === Security ===

# `YAML.safe_load` is restrictive, we do not use it
Security/YAMLLoad:
  Enabled: false


# === Style ===

# Allow `module Module::Class`
Style/ClassAndModuleChildren:
  Enabled: false

# Good code does not need comments to describe it
Style/Documentation:
  Enabled: false

# Do not require comments for `eval`
Style/DocumentDynamicEvalDefinition:
  Enabled: false

# Allow the use of `ENV['name']`
Style/FetchEnvVar:
  Enabled: false

# Prefer `str % ...` as a string formatting utility
Style/FormatString:
  EnforcedStyle: percent

# Allow named or unnamed tokens in strings
Style/FormatStringToken:
  Enabled: false

# Frozen string literals are not needed in ruby >= 3
Style/FrozenStringLiteralComment:
  Enabled: false

# Avoid hash rocket syntax where appropriate (EnforcedStyle)
Style/HashSyntax:
  EnforcedStyle: ruby19_no_mixed_keys 

# Allow non one-line conditions even when the body of the condition is one line
Style/IfUnlessModifier:
  Enabled: false

# Allow long numbers without undescores
Style/NumericLiterals:
  Enabled: false

# Allow top level `include` in some places
Style/MixinUsage:
  Exclude:
    - 'bin/*'
    - 'spec/spec_helper.rb'

# Allow unfrozen literals
Style/MutableConstant:
  Enabled: false

# Allow nested methods to be written without parentheses
Style/NestedParenthesizedCalls:
  Enabled: false

# Allow the use of OpenStruct
Style/OpenStructUse:
  Enabled: false

# Prefer `%[]` percent literals
Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    default: '[]'

# Allow perl-style regex back-references (`$1`)
Style/PerlBackrefs:
  Enabled: false

# Prefer `has_key?` and `has_value?` for hashes
Style/PreferredHashMethods:
  EnforcedStyle: verbose

# Allow one line `rescue` since it is useful in some cases
Style/RescueModifier:
  Enabled: false

# Prefer `rescue` over `rescue StandardError`
Style/RescueStandardError:
  EnforcedStyle: implicit

# Avoid forcing safe navigation as it is usually less readable and sometimes
# just inappropriate
Style/SafeNavigation:
  Enabled: false

# Allow perl style global variables like `$?`
Style/SpecialGlobalVars:
  Enabled: false

# Allow `$stderr.puts` instead of `warn`
Style/StderrPuts:
  Enabled: false

# Prefer multi-line arrays to end with a comma for easy alteration
Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

# Prefer multi-line hashes to end with a comma for easy alteration
Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

# Allow calling `super` without parentheses
Style/SuperWithArgsParentheses:
  Enabled: false
